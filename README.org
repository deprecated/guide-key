* guide-key.el
** Overview
guide-key.el enables to guide the following key bindings automatically and
dynamically. guide-key aims to be an alternative of [[http://emacswiki.org/emacs/one-key.el][one-key.el]].

Here are some features of this library.
- guide-key automatically pop up the keys following your favorite
  prefixes. Moreover, even if you change key bindings, guide-key follows its
  change dynamically.
- guide-key can highlight particular commands. This makes it easy to find a
  command you are looking for, and to learn its key binding.
- guide-key doesn't overwrite existing commands and key bindings. So, there
  is no bad effect on using `describe-key' and `describe-bindings'.
** Installation
I added guide-key to [[http://melpa.milkbox.net/][MELPA]]. You can install guide-key with package.el,

[[http://www.kaichan.mydns.jp/~kai/wordpress/wp-content/uploads/2012/11/wpid-guide-key-package-install.png]]

Because guide-key depends on [[https://github.com/m2ym/popwin-el][popwin.el]], popwin.el is also installed at a
time.

If you don't have package.el, please download popwin.el and guide-key.el
directly from [[https://github.com/m2ym/popwin-el][m2ym/popwin-el]] and [[https://github.com/kbkbkbkb1/guide-key][kbkbkbkb1/guide-key]], and then put them in
your `load-path'.
** Usage
You just add your favorite prefix keys to `guide-key/guide-key-sequence' as
below.
#+BEGIN_SRC emacs-lisp
(require 'guide-key)
(setq guide-key/guide-key-sequence '("C-x r" "C-x 4"))
(guide-key-mode 1)  ; Enable guide-key-mode
#+END_SRC
When you press these prefix keys, key bindings are automatically popped up.
This is a screenshot when you press "C-x r".

[[http://www.kaichan.mydns.jp/~kai/wordpress/wp-content/uploads/2012/11/wpid-guide-key-example.png]]

guide-key can highlight commands which match a specified regular expression.
Key bindings following "C-x r" are rectangle family and register family.
If you want to highlight only rectangle family commands, put this setting
in your init.el.
#+BEGIN_SRC emacs-lisp
(setq guide-key/highlight-command-regexp "rectangle")
#+END_SRC

[[http://www.kaichan.mydns.jp/~kai/wordpress/wp-content/uploads/2012/11/wpid-guide-key-example2.png]]

This feature makes it easy to find commands and learn their key bindings. If
you want to highlight both rectangle family and register family, set an
adequate regular expression like this.
#+BEGIN_SRC emacs-lisp
(setq guide-key/highlight-command-regexp "rectangle\\|register")
#+END_SRC
Moreover, prefix commands are automatically highlighted.

Here are some functions and variables which control guide-key.
- *(guide-key-mode ARG)*: guide-key-mode is implemented as a minor mode.
     Excuting M-x guide-key-mode toggles whether guide-key is enabled or not.
     Because guide-key-mode is a global minor mode, guide-key-mode is enabled
     in all buffers or disabled in all buffers.
- *guide-key/popup-window-position*: This variable controls where a guide-key
     buffer is popped up. A value of this variable is one of ~right~, ~bottom~,
     ~left~, ~top~. The default value is ~right~.
- *guide-key/polling-time*: This variable controls a polling time. The
     default value is 0.1 (in seconds).

I've confirmed that guide-key works well in these environments.
- Emacs 24.2, Ubuntu 12.04 or Windows 7 64bit
- Emacs 23.3, Ubuntu 12.04 or Windows 7 64bit
- Emacs 22.3, Windows 7 64bit
If popwin works good, I think guide-key also works good. You can use
guide-key with Emacs working in terminal.
*** Add settings in a particular mode
You can add extra settings in a particular mode. Please use
`guide-key/add-local-guide-key-sequence',
`guide-key/add-local-highlight-command-regexp' and hook of
that mode.

This code is a example of org-mode.
#+BEGIN_SRC emacs-lisp
(defun guide-key/my-hook-function-for-org-mode ()
  (guide-key/add-local-guide-key-sequence "C-c")
  (guide-key/add-local-guide-key-sequence "C-c C-x")
  (guide-key/add-local-highlight-command-regexp "org-"))
(add-hook 'org-mode-hook 'guide-key/my-hook-function-for-org-mode)
#+END_SRC
If you execute `org-set-property' by pressing "C-c C-x p" in org-mode buffer,
emacs behaves as below.

[[http://www.kaichan.mydns.jp/~kai/wordpress/wp-content/uploads/2012/11/wpid-guide-key-example-org-anime.gif]]
** Known issues
Here are some issues and drawbacks.
- Because guide-key tries to pop up all keybidings, a size of popup window
  tends to be big. If the popup window is bigger than the current frame,
  guide-key cannot pop up normally. I recommend you not to add a prefix which
  has many key bindings like "C-x".
- A popup window sometimes closes immediately. It tends to happen right after
  a window controlled by popwin.el closes. In that case, please retry after
  you type "C-g" a couple of times.
- one-key can display a short description instead of its command name.  This
  is an advantage to creating template manually. In contrast, because
  guide-key extracts key bindings dynamically, guide-key can display nothing
  except a command name.
